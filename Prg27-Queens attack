#include <stdio.h>
#include <stdlib.h>


void printBoard(int **board, int N) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            printf("%c ", board[i][j] == 1 ? 'Q' : '.');
        }
        printf("\n");
    }
    printf("\n");
}


int isSafe(int **board, int row, int col, int N) {
    
    for (int i = 0; i < col; i++) {
        if (board[row][i] == 1) {
            return 0;
        }
    }

    
    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] == 1) {
            return 0;
        }
    }

    
    for (int i = row, j = col; i < N && j >= 0; i++, j--) {
        if (board[i][j] == 1) {
            return 0;
        }
    }

    return 1; 
}


void solveNQueens(int **board, int N, int col) {
    if (col == N) {
        
        printBoard(board, N);
        return;
    }

    for (int i = 0; i < N; i++) {
        if (isSafe(board, i, col, N)) {
            board[i][col] = 1; 

            
            solveNQueens(board, N, col + 1);

            
            board[i][col] = 0;
        }
    }
}

int main() {
    int N;

    
    printf("Enter the size of the chessboard (N): ");
    scanf("%d", &N);

    
    int **board = (int **)malloc(N * sizeof(int *));
    for (int i = 0; i < N; i++) {
        board[i] = (int *)malloc(N * sizeof(int));
        for (int j = 0; j < N; j++) {
            board[i][j] = 0; 
        }
    }

    
    solveNQueens(board, N, 0);

 
    for (int i = 0; i < N; i++) {
        free(board[i]);
    }
    free(board);

    return 0;
}
